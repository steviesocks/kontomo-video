{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","player","useRef","className","onClick","current","getInternalPlayer","playVideo","ref","opts","height","width","playerVars","autoplay","controls","modestbranding","loop","playlist","start","end","videoId","onStateChange","e","internalPlayer","data","lowestQuality","getAvailableQualityLevels","then","result","length","catch","err","console","log","setPlaybackQuality","minutes","Date","now","seekTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA2DeA,MAvDf,WACE,IAAMC,EAASC,mBAwCf,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,gBAAgBC,QA3BlB,WACjBH,EAAOI,QAAQC,oBAAoBC,aA0B/B,UACE,cAAC,IAAD,CAASC,IAAKP,EAAQQ,KA1ChB,CACZC,OAAQ,MACRC,MAAO,MACPC,WAAY,CACVC,SAAU,EACVC,SAAU,EACVC,eAAgB,EAChBC,KAAM,EACNC,SAAU,cACVC,MAAO,EACPC,IAAK,OAgCkCC,QAAQ,cAAcC,cAhBvC,SAACC,GACzB,IAAMC,EAAiBtB,EAAOI,QAAQC,oBACtC,IAAgB,IAAZgB,EAAEE,KAAa,CACjB,IAAMC,EAAgBF,EAAeG,4BAA4BC,MAAK,SAAAC,GACpE,GAAIA,EAAOC,OAAS,EAClB,OAAOD,EAAOA,EAAOC,OAAS,MAE/BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC5BR,EAAeW,mBAAmBT,OAS9B,qBAAKtB,UAAU,mBAEjB,wBAAQC,QA1BY,WACxB,IAAMmB,EAAiBtB,EAAOI,QAAQC,oBAChC6B,EAAWC,KAAKC,MAAQ,IAAS,GACvCd,EAAee,OAAe,GAARH,IAuBlB,sCCxCOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f16a98d4.chunk.js","sourcesContent":["import { useRef } from 'react';\nimport YouTube from 'react-youtube';\nimport './App.css';\n\nfunction App() {\n  const player = useRef();\n\n  const props = {\n    height: \"360\",\n    width: \"640\",\n    playerVars: {\n      autoplay: 1,\n      controls: 0,\n      modestbranding: 1,\n      loop: 1,\n      playlist: \"b96TnabpVyo\",\n      start: 1,\n      end: 3600,\n    },\n  }\n\n  const handlePlay = () => {\n    player.current.getInternalPlayer().playVideo()\n  }\n\n\n  const handleCurrentTime = () => {\n    const internalPlayer = player.current.getInternalPlayer()\n    const minutes = (Date.now() / 60000) % 60;\n    internalPlayer.seekTo(minutes*60)\n  }\n\n  // Deprecated: set playback quality to lowest available\n  const handlePlayerReady = (e) => {\n    const internalPlayer = player.current.getInternalPlayer()\n    if (e.data === -1) {\n      const lowestQuality = internalPlayer.getAvailableQualityLevels().then(result => {\n        if (result.length > 1) {\n          return result[result.length - 2]\n        }\n      }).catch(err => console.log(err))\n      internalPlayer.setPlaybackQuality(lowestQuality)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"video-wrapper\" onClick={handlePlay}> \n          <YouTube ref={player} opts={props} videoId=\"b96TnabpVyo\" onStateChange={handlePlayerReady}/>\n          <div className=\"video-cover\" />\n        </div>\n        <button onClick={handleCurrentTime}>Go to current time</button>\n      </header>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}